// This is an autogenerated file from running `firebase genkit:flow`.
'use server';

/**
 * @fileOverview Provides AI-powered product recommendations based on a given product.
 *
 * - recommendProducts - A function that takes a product description and returns a list of recommended products.
 * - RecommendProductsInput - The input type for the recommendProducts function.
 * - RecommendProductsOutput - The return type for the recommendProducts function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const RecommendProductsInputSchema = z.object({
  productDescription: z.string().describe('The description of the product for which to find recommendations.'),
});
export type RecommendProductsInput = z.infer<typeof RecommendProductsInputSchema>;

const RecommendProductsOutputSchema = z.object({
  recommendedProducts: z.array(z.string()).describe('A list of recommended products based on the input product description.'),
});
export type RecommendProductsOutput = z.infer<typeof RecommendProductsOutputSchema>;

export async function recommendProducts(input: RecommendProductsInput): Promise<RecommendProductsOutput> {
  return recommendProductsFlow(input);
}

const recommendProductsPrompt = ai.definePrompt({
  name: 'recommendProductsPrompt',
  input: {schema: RecommendProductsInputSchema},
  output: {schema: RecommendProductsOutputSchema},
  prompt: `Based on the following product description: "{{productDescription}}", suggest a list of related products that a customer might also be interested in. Provide only the list of product names.

Related Products:`,
});

const recommendProductsFlow = ai.defineFlow(
  {
    name: 'recommendProductsFlow',
    inputSchema: RecommendProductsInputSchema,
    outputSchema: RecommendProductsOutputSchema,
  },
  async input => {
    const {output} = await recommendProductsPrompt(input);
    return output!;
  }
);
